// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ew0s/ewos-to-go-hw/chat-server/internal/service/message/private (interfaces: PrivateMessageRepo)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	entity "github.com/ew0s/ewos-to-go-hw/chat-server/internal/domain/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockPrivateMessageRepo is a mock of PrivateMessageRepo interface.
type MockPrivateMessageRepo struct {
	ctrl     *gomock.Controller
	recorder *MockPrivateMessageRepoMockRecorder
}

// MockPrivateMessageRepoMockRecorder is the mock recorder for MockPrivateMessageRepo.
type MockPrivateMessageRepoMockRecorder struct {
	mock *MockPrivateMessageRepo
}

// NewMockPrivateMessageRepo creates a new mock instance.
func NewMockPrivateMessageRepo(ctrl *gomock.Controller) *MockPrivateMessageRepo {
	mock := &MockPrivateMessageRepo{ctrl: ctrl}
	mock.recorder = &MockPrivateMessageRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPrivateMessageRepo) EXPECT() *MockPrivateMessageRepoMockRecorder {
	return m.recorder
}

// AddPrivateMessage mocks base method.
func (m *MockPrivateMessageRepo) AddPrivateMessage(arg0 context.Context, arg1 entity.PrivateMessage) (*entity.PrivateMessage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddPrivateMessage", arg0, arg1)
	ret0, _ := ret[0].(*entity.PrivateMessage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddPrivateMessage indicates an expected call of AddPrivateMessage.
func (mr *MockPrivateMessageRepoMockRecorder) AddPrivateMessage(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddPrivateMessage", reflect.TypeOf((*MockPrivateMessageRepo)(nil).AddPrivateMessage), arg0, arg1)
}

// GetAllPrivateMessages mocks base method.
func (m *MockPrivateMessageRepo) GetAllPrivateMessages(arg0 context.Context, arg1, arg2 int) []*entity.PrivateMessage {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllPrivateMessages", arg0, arg1, arg2)
	ret0, _ := ret[0].([]*entity.PrivateMessage)
	return ret0
}

// GetAllPrivateMessages indicates an expected call of GetAllPrivateMessages.
func (mr *MockPrivateMessageRepoMockRecorder) GetAllPrivateMessages(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllPrivateMessages", reflect.TypeOf((*MockPrivateMessageRepo)(nil).GetAllPrivateMessages), arg0, arg1, arg2)
}

// GetPrivateMessage mocks base method.
func (m *MockPrivateMessageRepo) GetPrivateMessage(arg0 context.Context, arg1 int) (*entity.PrivateMessage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPrivateMessage", arg0, arg1)
	ret0, _ := ret[0].(*entity.PrivateMessage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPrivateMessage indicates an expected call of GetPrivateMessage.
func (mr *MockPrivateMessageRepoMockRecorder) GetPrivateMessage(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPrivateMessage", reflect.TypeOf((*MockPrivateMessageRepo)(nil).GetPrivateMessage), arg0, arg1)
}
