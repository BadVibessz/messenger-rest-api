// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ew0s/ewos-to-go-hw/chat-server/internal/service/message/public (interfaces: PublicMessageRepo)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	entity "github.com/ew0s/ewos-to-go-hw/chat-server/internal/domain/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockPublicMessageRepo is a mock of PublicMessageRepo interface.
type MockPublicMessageRepo struct {
	ctrl     *gomock.Controller
	recorder *MockPublicMessageRepoMockRecorder
}

// MockPublicMessageRepoMockRecorder is the mock recorder for MockPublicMessageRepo.
type MockPublicMessageRepoMockRecorder struct {
	mock *MockPublicMessageRepo
}

// NewMockPublicMessageRepo creates a new mock instance.
func NewMockPublicMessageRepo(ctrl *gomock.Controller) *MockPublicMessageRepo {
	mock := &MockPublicMessageRepo{ctrl: ctrl}
	mock.recorder = &MockPublicMessageRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPublicMessageRepo) EXPECT() *MockPublicMessageRepoMockRecorder {
	return m.recorder
}

// AddPublicMessage mocks base method.
func (m *MockPublicMessageRepo) AddPublicMessage(arg0 context.Context, arg1 entity.PublicMessage) (*entity.PublicMessage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddPublicMessage", arg0, arg1)
	ret0, _ := ret[0].(*entity.PublicMessage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddPublicMessage indicates an expected call of AddPublicMessage.
func (mr *MockPublicMessageRepoMockRecorder) AddPublicMessage(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddPublicMessage", reflect.TypeOf((*MockPublicMessageRepo)(nil).AddPublicMessage), arg0, arg1)
}

// GetAllPublicMessages mocks base method.
func (m *MockPublicMessageRepo) GetAllPublicMessages(arg0 context.Context, arg1, arg2 int) []*entity.PublicMessage {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllPublicMessages", arg0, arg1, arg2)
	ret0, _ := ret[0].([]*entity.PublicMessage)
	return ret0
}

// GetAllPublicMessages indicates an expected call of GetAllPublicMessages.
func (mr *MockPublicMessageRepoMockRecorder) GetAllPublicMessages(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllPublicMessages", reflect.TypeOf((*MockPublicMessageRepo)(nil).GetAllPublicMessages), arg0, arg1, arg2)
}

// GetPublicMessage mocks base method.
func (m *MockPublicMessageRepo) GetPublicMessage(arg0 context.Context, arg1 int) (*entity.PublicMessage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPublicMessage", arg0, arg1)
	ret0, _ := ret[0].(*entity.PublicMessage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPublicMessage indicates an expected call of GetPublicMessage.
func (mr *MockPublicMessageRepoMockRecorder) GetPublicMessage(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPublicMessage", reflect.TypeOf((*MockPublicMessageRepo)(nil).GetPublicMessage), arg0, arg1)
}
